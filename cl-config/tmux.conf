# Remap prefix from ctrl-b to ctrl-;
# Note this requires help from iTerm2 to remap ctrl-; to alt-_
unbind-key C-b
set -g prefix M-_
set -g prefix2 C-b

# Display things in 256 colors
set -g default-terminal 'tmux-256color-italic'
set -gas terminal-overrides ',xterm*:sitm=\E[3m:Tc'

# Prevent renaming
set-window-option -g allow-rename off
set-window-option -g automatic-rename off

# Save more history than default
set -g history-limit 100000

# Turn off bells for less annoying-ness
set -g bell-on-alert off
set -g bell-action none

# Let vim know when focus is gained/lost
set -g focus-events on


#BEGIN COPYPASTA

set -g default-command "zsh -c ''; reattach-to-user-namespace -l zsh"

set -g set-titles on
set -g set-titles-string '#W #T' # window number,program name, active(or not)

#########
# THEME #
#########

left_section_color2=colour235
left_section_color1=colour237
tm_status_background=colour239
tm_color_active=colour2
tm_color_inactive=colour242
tm_border_color=colour2
tm_right_separator=''
tm_left_separator=''

set -g status-left-length 32
set -g status-right-length 150
set -g status-interval 5

# Status bar style
set -g status-fg $tm_color_active
set -g status-bg $tm_status_background
set -g status-attr default

# Window tab style
set-window-option -g window-status-fg colour253
set-window-option -g window-status-bg $tm_color_inactive
set -g window-status-format "  #I #W  "
set-window-option -g  window-status-current-format "#[fg=$tm_status_background]#[bg=$tm_color_active]$tm_left_separator#[fg=colour232] #[bold]#I #W #[bg=$tm_status_background]#[fg=$tm_color_active]$tm_left_separator"

# Pane border style
set -g pane-border-fg $tm_border_color
set -g pane-active-border-fg $tm_border_color
set -g display-panes-active-colour $tm_color_active
set -g display-panes-colour $tm_color_inactive

# Message style
set -g message-bg $tm_status_background
set -g message-fg $tm_color_active
set -g message-command-bg $tm_status_background
set -g message-command-fg $tm_color_active

# clock
set-window-option -g clock-mode-colour $tm_color_active

set -g status-left "  "
set -g status-right "#[fg=$left_section_color1]$tm_right_separator#[bg=$left_section_color1] #[fg=colour1]#(osascript ~/Developer/dotfiles/cl-config/tmux/spotify_current_song.script) #[fg=$left_section_color2]$tm_right_separator#[bg=$left_section_color2] #[fg=colour255]%l:%M #[fg=colour7]%d %b "

# automatically renumber tmux windows
set -g renumber-windows on

# for nested tmux sessions
bind Space send-prefix

# Activity Monitoring
setw -g monitor-activity off
set -g visual-activity off

# Rather than constraining window size to the maximum size of any client
# connected to the *session*, constrain window size to the maximum size of any
# client connected to *that window*. Much more reasonable.
setw -g aggressive-resize on

# make delay shorter
set -sg escape-time 0

# make window/pane index start with 1
set -g base-index 1
setw -g pane-base-index 1

######################
#### Key Bindings ####
######################

# split window
bind \ split-window -c '#{pane_current_path}' -h \; last-pane \; run 'sleep 0.1' \; last-pane
bind - split-window -c '#{pane_current_path}' -v \; last-pane \; run 'sleep 0.1' \; last-pane

# quickly open a new window
bind N new-window -c '#{pane_current_path}'
bind -n M-~ new-window -c '#{pane_current_path}'
bind M-~ new-window -c '#{pane_current_path}'

# synchronize all panes in a window
bind y setw synchronize-panes

# pane movement shortcuts
bind C-h select-pane -L
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind C-l select-pane -R
bind l select-pane -R

bind M-+ select-window -t :-
bind -n M-+ select-window -t :-
bind C-o select-window -t :+
bind -n C-o select-window -t :+

bind -n C-j send-keys Down
bind -n C-k send-keys Up

bind -n M-i if-shell "tmux swap-window -s '#I' -t \"$((#I-1))\"" ""
bind -n M-o if-shell "tmux swap-window -s '#I' -t \"$((#I+1))\"" ""

bind M-h if-shell "tmux swap-pane -s '#P' -t \"$((#P-1))\"" "tmux select-pane -t \"$((#P+1))\""
bind M-l if-shell "tmux swap-pane -s '#P' -t \"$((#P+1))\"" "tmux select-pane -t \"$((#P-1))\""

# Resize pane shortcuts
bind -r H resize-pane -L 10
bind -r J resize-pane -D 10
bind -r K resize-pane -U 10
bind -r L resize-pane -R 10

bind D detach -a

# enable mouse support for switching panes/windows
# NOTE: This breaks selecting/copying text on OSX
# To select text as expected, hold Option to disable it (iTerm2)
setw -g mouse on

# set vi mode for copy mode
set -g status-keys emacs

unbind \;
bind \; command-prompt


##########################################
# NAVIGATING/COPYING CONTENT IN VIM-MODE #
##########################################

unbind [
bind M-_ copy-mode -e

set -g word-separators ' @"=:,.()[]/'
setw -g mode-keys vi

bind -T copy-mode-vi 'v' send -X begin-selection
bind -T copy-mode-vi 'y' send -X copy-selection-and-cancel
bind -T copy-mode-vi C-c send -X copy-selection-and-cancel
bind -T copy-mode-vi 'Y' send -X copy-line
bind -T copy-mode-vi 'V' send -X select-line
bind -T copy-mode-vi Escape send -X clear-selection
bind -T copy-mode-vi Down send -X halfpage-down
bind -T copy-mode-vi Up send -X halfpage-up

# Used with Cmd-Shift-J and Cmd-Shift-K mapping in iTerm to
# allow quick switching into copy mode and fast scrolling
bind -n M-\ copy-mode -e \; send -X halfpage-up
bind -n M-| copy-mode -e \; send -X halfpage-down
bind -T copy-mode-vi M-\ send -X halfpage-up
bind -T copy-mode-vi M-| send -X halfpage-down
