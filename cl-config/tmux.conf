# Remap prefix from ctrl-b to ctrl-;
# Note this requires help from alacritty to remap ctrl-; to alt-_
unbind-key C-b
set -g prefix M-_

set -g default-terminal "$TERM"
set -ag terminal-overrides ",$TERM:Tc"

# Prevent renaming
set-window-option -g automatic-rename on
set-window-option -g allow-rename on

# Save more history than default
set -g history-limit 100000

# Turn off bells for less annoying-ness
set-option -g silence-action none
set-option -g visual-activity on
set-option -g visual-bell off
set-option -g visual-silence on

# Let vim know when focus is gained/lost
set -g focus-events on


#BEGIN COPYPASTA

set -g set-titles on
set -g set-titles-string '#T' # window number, program name

#########
# THEME #
#########

left_section_color2=colour235
left_section_color1=colour237
tm_status_background=colour239
tm_color_active=colour2
tm_color_inactive=colour242
tm_border_color=colour2
tm_right_separator=''
tm_left_separator=''

set -g status-left-length 32
set -g status-right-length 150
set -g status-interval 5

# Status bar style
set -g status-style fg=$tm_color_active,bg=$tm_status_background

# Window tab style
set-window-option -g window-status-style fg=colour253,bg=$tm_color_inactive
set -g window-status-format "  #I #W  "
set-window-option -g window-status-current-format "#[fg=$tm_status_background]#[bg=$tm_color_active]$tm_left_separator#[fg=colour232] #[bold]#I #W #[bg=$tm_status_background]#[fg=$tm_color_active]$tm_left_separator"

# Pane border style
set -g pane-border-style fg=$tm_border_color
set -g pane-active-border-style fg=$tm_border_color
set -g display-panes-active-colour $tm_color_active
set -g display-panes-colour $tm_color_inactive

# Message style
set -g message-style fg=$tm_color_active,bg=$tm_status_background
set -g message-command-style fg=$tm_color_active,bg=$tm_status_background

# clock
set-window-option -g clock-mode-colour $tm_color_active

set -g status-left "  "
set -g status-right "#[fg=$left_section_color1]$tm_right_separator#[bg=$left_section_color1] #[fg=colour1]#(osascript ~/Developer/dotfiles/cl-config/tmux/spotify_current_song.script) #[fg=$left_section_color2]$tm_right_separator#[bg=$left_section_color2] "

# automatically renumber tmux windows
set -g renumber-windows on

# for nested tmux sessions
bind Space send-prefix

# Activity Monitoring
setw -g monitor-activity off
set -g visual-activity off

# Rather than constraining window size to the maximum size of any client
# connected to the *session*, constrain window size to the maximum size of any
# client connected to *that window*. Much more reasonable.
setw -g aggressive-resize on

# make delay shorter
set -sg escape-time 0

# make window/pane index start with 1
set -g base-index 1
setw -g pane-base-index 1

######################
#### Key Bindings ####
######################

# split window
bind \\ split-window -c '#{pane_current_path}' -h \; last-pane \; run 'sleep 0.1' \; last-pane
bind - split-window -c '#{pane_current_path}' -v \; last-pane \; run 'sleep 0.1' \; last-pane

# quickly open a new window
bind -n C-u new-window -c '#{pane_current_path}'
bind C-u new-window -c '#{pane_current_path}'

# select window
bind M-+ select-window -t :-
bind -n M-+ select-window -t :-
bind M-3 select-window -t :+
bind -n M-3 select-window -t :+

bind x kill-pane
bind X kill-window

bind -n M-0 if-shell "tmux swap-window -s '#I' -t \"$((#I-1))\"" "select-window -t :-"
bind -n M-1 if-shell "tmux swap-window -s '#I' -t \"$((#I+1))\"" "select-window -t :+"

# Resize pane shortcuts
bind -r H resize-pane -L 10
bind -r J resize-pane -D 10
bind -r K resize-pane -U 10
bind -r L resize-pane -R 10

# go to previous and next prompt in copy mode
bind -T copy-mode-vi Up send -X previous-prompt
bind -T copy-mode-vi Down send -X next-prompt

bind D detach -a

# enable mouse support for switching panes/windows
setw -g mouse on

# set vi mode for copy mode
set -g status-keys emacs

unbind \;
bind \; command-prompt


##########################################
# NAVIGATING/COPYING CONTENT IN VIM-MODE #
##########################################

unbind [
bind M-_ copy-mode -e

set -g word-separators ' @"=:,.()[]/'
setw -g mode-keys vi

bind -T copy-mode-vi 'v' send -X begin-selection
bind -T copy-mode-vi 'y' send -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"
bind -T copy-mode-vi 'g' send -X copy-pipe-and-cancel 'read -r arr; open "https://google.com/search?q=${arr}"'
bind -T copy-mode-vi C-c send -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"
bind -T copy-mode-vi 'C' send -X select-line \; send -X copy-pipe "reattach-to-user-namespace pbcopy" \; send-keys -t ! C-c Up Enter
bind -T copy-mode-vi 'Y' send -X select-line \; send -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"
bind -T copy-mode-vi 'V' send -X select-line
bind -T copy-mode-vi Escape send -X clear-selection
bind -T copy-mode-vi 'm' send -X halfpage-down
bind -T copy-mode-vi ',' send -X halfpage-up
bind -T copy-mode-vi Tab run-shell "~/.tmux/plugins/extrakto/scripts/open.sh \"#{pane_id}\""

set -ga update-environment EDITOR
set -g @plugin 'MrGrinst/tmux_super_fingers'
set -g @plugin 'laktak/extrakto'
set -g @plugin 'ofirgall/tmux-window-name'
set -g @super-fingers-key Space

run '~/.tmux/plugins/tpm/tpm'

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|l?n?vim?x?|fzf)(diff)?$'"
bind-key 'h' if-shell "$is_vim" 'send-keys C-0'  'select-pane -L'
bind-key 'j' if-shell "$is_vim" 'send-keys C-1'  'select-pane -D'
bind-key 'k' if-shell "$is_vim" 'send-keys C-2'  'select-pane -U'
bind-key 'l' if-shell "$is_vim" 'send-keys C-3'  'select-pane -R'

bind-key -T copy-mode-vi 'C-0' select-pane -L
bind-key -T copy-mode-vi 'C-1' select-pane -D
bind-key -T copy-mode-vi 'C-2' select-pane -U
bind-key -T copy-mode-vi 'C-3' select-pane -R
