# Get accurate time to use for profiling
START_TIME=$(python -c 'import time; print(time.time())')

#####################
# Cross-shell Setup #
#####################
source ~/.profile

#############
# Oh-my-zsh #
#############

export ZSH=~/.oh-my-zsh
ZSH_THEME="refined"
plugins=(gitfast brew npm z actuator docker ansible docker-compose gem yarn httpie sudo encode64)
DISABLE_UPDATE_PROMPT=true # Prevent oh-my-zsh from asking about updating
DISABLE_AUTO_UPDATE=true # Prevent oh-my-zsh from auto-updating
source $ZSH/oh-my-zsh.sh

export MAILCHECK=0 # Don't annoy me with "mail" messages
export KEYTIMEOUT=1 # Make sure escape doesn't cause issues

# Set vim as the default editor for the terminal
export EDITOR=nvim
export VISUAL=$EDITOR

export TERM=tmux-256color-italic

export SSLKEYLOGFILE=~/sslkeylogs/output.log

# Max out history size
export HISTSIZE=10000000
export SAVEHIST=10000000

# Don't show a bunch of the same command when going through history
setopt HIST_FIND_NO_DUPS

# If you do a 'rm *', Zsh will give you a sanity check!
setopt RM_STAR_WAIT

# Attempt to fix file-limit issues. Probably doesn't work?
ulimit -S -n 9000

# Allow hooking into zsh
autoload -U add-zsh-hook

###########
# Aliases #
###########

alias sudo='sudo '
alias vim='nvim -p'
alias reload!='cd .' # Reload zsh config
alias launchctl='reattach-to-user-namespace launchctl' # Fix tmux copy/paste
alias gs='git status'
alias ga='git commit --amend'
alias gap='git add . && git commit --amend --no-edit && git push'
alias gd='cdiff -s'
alias base64='encode64'
alias vim-edit-changes='vim -p $(git diff --stat --name-only --relative --diff-filter=ACMRTUX HEAD)'
alias vim-fix-conflicts='vim -p $(git diff --name-only)'
function docker_connect_to_last() {
  docker_process=$(docker ps | awk 'NR == 2 {print $1}')
  docker exec -it $docker_process /bin/bash
}

function myip() {
  ifconfig lo0 | grep 'inet ' | sed -e 's/:/ /' | awk '{print "lo0: " $2}'
  ifconfig en0 | grep 'inet ' | sed -e 's/:/ /' | awk '{print "en0: " $2}'
  ifconfig en1 | grep 'inet ' | sed -e 's/:/ /' | awk '{print "en1: " $2}'
}

check_port () {
  lsof -nP -i4TCP:$1 | grep --color=auto --exclude-dir={.bzr,CVS,.git,.hg,.svn} LISTEN | tr -s ' '
}
kill_port () {
  check_port $1 | cut -f 2 -d' ' | xargs kill -9
}
imv() {
  local src dst
  for src; do
    [[ -e $src ]] || { print -u2 "$src does not exist"; continue }
    dst=$src
    vared dst
    [[ $src != $dst ]] && mkdir -p $dst:h && mv -n $src $dst
  done
}

######################
# Additional Plugins #
######################

  #######
  # FZF #
  #######

  [[ -f ~/.fzf.zsh ]] && source ~/.fzf.zsh

  # Re-bind CTRL-T to do the same as **<Tab>
  function _ctrl_t {
    if [[ "$BUFFER" == "" ]]; then
      fzf-file-widget
      file="${BUFFER%?}"
      if [[ -n "$file" ]]; then
        LBUFFER="vim $file"
        zle reset-prompt
        zle accept-line
      fi
    else
      LBUFFER="$LBUFFER**"
      zle reset-prompt
      fzf-completion
    fi
  }
  zle -N _ctrl_t
  bindkey '^T' _ctrl_t

  # Set rg as the default source for fzf. Speedy!
  export FZF_DEFAULT_COMMAND='rg --files --hidden --follow --glob "!.git/*"'

  # To apply the command to CTRL-T as well
  export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"

  _fzf_compgen_path() {
    rg --files --hidden --follow --glob "!.git/*" "$1"
  }

  _fzf_complete_rspec() {
    _fzf_complete "--multi --reverse" "$@" < <(
    if [[ -d "spec" ]]; then
      rg --files --hidden --follow --glob "!.git/*" "" spec
    else
      rg --files --hidden --follow --glob "!.git/*" "" .
    fi
    )
  }

###############
# Local zshrc #
###############

if [[ -f ~/.zshrc.local ]]; then
  source ~/.zshrc.local
fi

##############################################
# Directory-specific zsh config and env vars #
##############################################

function iteratively_source_config_files() {
  parent_dirs=$(pwd | awk 'BEGIN {FS="/"} { for (i = 2; i <= NF; i++) { print substr($0, 0, index($0, $i) + length($i)); } }')
  while read -r directory; do
    zsh_config_file=$(echo "$directory/.zsh_config" | sed 's/\/\//\//')
    exports_file=$(echo "$directory/.exports.env" | sed 's/\/\//\//')
    if [[ -r $zsh_config_file ]]; then
      source $zsh_config_file
    fi
    if [[ -r $exports_file ]]; then
      source $exports_file
    fi
  done <<< "$parent_dirs"
}

function my_chpwd() {
  add-zsh-hook -d chpwd my_chpwd
  source ~/.zshrc # TODO: find a way to make this faster
}

iteratively_source_config_files
add-zsh-hook chpwd my_chpwd

if [[ $ENABLE_ZSH_PROFILING -eq 1 ]]; then
  echo ".zshrc source complete. Time elapsed: $(($(python -c 'import time; print(time.time())')-$START_TIME))"
fi
