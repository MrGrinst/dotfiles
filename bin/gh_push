#!/bin/bash

command -v gsed &> /dev/null || echo "You're missing gsed. Install it with \`brew install gnu-sed\`."

subject="$(git log --pretty=format:%s -1)"

branchName="$(git branch --show-current)"

if [[ "$branchName" == "master" || "$branchName" == "main" || "$branchName" == "dev" || "$branchName" == feature/*  ]]; then
  echo "On master/main/dev/feature, please create a branch first"
  if [[ "$(git status --porcelain=v1 2>/dev/null | wc -l | tr -d ' ')" != "0" ]]; then
    echo "Some unstaged changes exist, so not automatically helping by creating branch."
    exit 1
  fi
  echo -n "Would you like to create one now? (y/n) "
  read -r response
  if [[ "$response" == "y" ]]; then
    commit=$(git rev-parse HEAD)
    defaultName="kg-$(date +"%Y-%m-%d")-$(git log -1 --pretty=format:%s | sed -E 's/[\(\)]/-/g' | sed -E 's/[^a-zA-Z \-]//g' | sed -E 's/ /-/g' | sed -E 's/--/-/g')"
    git reset --hard HEAD~
    echo -n "What would you like to name the branch? [$defaultName] "
    read -r name
    branchName="${name:-$defaultName}"

    git branch -D "$branchName"
    git checkout -b "$branchName"
    git cherry-pick "$commit"
  else
    exit 1
  fi
fi

existingBranch=$(git ls-remote origin "$branchName")

if [[ -n "$existingBranch" ]]; then
    echo "Branch already exists, no-oping."
else
    echo "Branch does not exist, pushing and creating merge request."

    if [[ -f ~/.team-members ]]; then
        reviewer=$(awk -F',' '{print $1 "\t" $2}' ~/.team-members | fzf --header="Select a reviewer" --with-nth=1 | cut -f2)
    fi

    baseBranch="$(git log --pretty=format:'%D' HEAD^ | grep 'origin/' | head -n1 | sed 's@origin/@@' | sed 's@,.*@@')"

    if git push; then
        gh pr create --title "$subject" --reviewer "$reviewer" --base "$baseBranch"
        gh pr view --web
    fi
fi
